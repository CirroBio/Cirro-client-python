# coding: utf-8

"""
    Cirro Data

    Cirro Data Platform service API

    The version of the OpenAPI document: latest
    Contact: support@cirro.bio
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from cirro_api_client.models.project_request import ProjectRequest

class TestProjectRequest(unittest.TestCase):
    """ProjectRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProjectRequest:
        """Test ProjectRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProjectRequest`
        """
        model = ProjectRequest()
        if include_optional:
            return ProjectRequest(
                name = '012',
                description = '0',
                billing_account_id = '0',
                settings = cirro_api_client.models.project_settings.ProjectSettings(
                    budget_amount = 0, 
                    budget_period = null, 
                    dragen_ami = 'ami----------------------', 
                    enable_compute = True, 
                    enable_dragen = True, 
                    enable_backup = True, 
                    enable_sftp = True, 
                    max_f1_vcpu = 0, 
                    max_spot_vcpu = 0, 
                    retention_policy_days = 0, 
                    service_connections = [
                        ''
                        ], 
                    create_vpc = True, 
                    vpc_id = 'vpc----------------------', 
                    batch_subnets = [
                        ''
                        ], 
                    kms_arn = 'arn:aws::::::::::::::::::::::', ),
                contacts = [
                    cirro_api_client.models.contact.Contact(
                        name = '', 
                        organization = '', 
                        email = '', 
                        phone = '', )
                    ],
                account = cirro_api_client.models.cloud_account.CloudAccount(
                    account_id = '048072888001', 
                    account_name = '', 
                    region_name = 'us-west-2', ),
                tags = [
                    cirro_api_client.models.tag.Tag(
                        key = '', 
                        value = '', 
                        editable = True, )
                    ]
            )
        else:
            return ProjectRequest(
                name = '012',
                description = '0',
                billing_account_id = '0',
                settings = cirro_api_client.models.project_settings.ProjectSettings(
                    budget_amount = 0, 
                    budget_period = null, 
                    dragen_ami = 'ami----------------------', 
                    enable_compute = True, 
                    enable_dragen = True, 
                    enable_backup = True, 
                    enable_sftp = True, 
                    max_f1_vcpu = 0, 
                    max_spot_vcpu = 0, 
                    retention_policy_days = 0, 
                    service_connections = [
                        ''
                        ], 
                    create_vpc = True, 
                    vpc_id = 'vpc----------------------', 
                    batch_subnets = [
                        ''
                        ], 
                    kms_arn = 'arn:aws::::::::::::::::::::::', ),
                contacts = [
                    cirro_api_client.models.contact.Contact(
                        name = '', 
                        organization = '', 
                        email = '', 
                        phone = '', )
                    ],
        )
        """

    def testProjectRequest(self):
        """Test ProjectRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
